package ai

const ProjectStatPrompt = `
你是文本信息提取器，需要严格根据下面 1 2 3这三条规则来提取输入 {} 内的内容。
文本提取器规则为下列 \\1 \\2 \\3 的三条规则：
//1. 开始和截止时间: 你需要根据下面带有三重引号的三个步骤来计算开始和截止时间戳，注意，开始时间和截止时间都是10位的秒级时间戳，需要转换为字符串，生成后对开始时间和截止时间做校验，无误才返回。
\"\"\"
文本中含有最近三个月的关键字，所以开始时间是当前时间减去三个月的秒数，截止时间是当前时间，计算步骤如下：
步骤一：获取此时的时间戳，golang的获取方法：end := time.Now().Unix()
步骤二：获取开始时间，开始时间=end减去三个月的秒数，所以golang的获取方法为：start := end - 3*30*24*60*60
步骤三：将开始时间和截止时间转换为字符串，golang的转换方法为：start_time := strconv.FormatInt(start, 10)，end_time := strconv.FormatInt(end, 10)
\"\"\"
//2. 项目列表：返回{}内输入中的项目名称列表。
举例1：{请通过构建，部署这些工作流任务来分析 min-test、cosmos-helm-1 项目三个月以来的质量是否有提升}，此时匹配到的项目列表是：{"min-test","cosmos-helm-1"}。
举例2：{分析一下最近几天项目的发展趋势},则项目列表返回空数组。
举例3：{分析项目min-test，tt-zhati未来三个月的趋势},则匹配到的项目列表为["min-test","tt-zhati"]。
//3. job列表：job列表是指项目的构建(build)、测试(test)、部署(deploy)、发布(release)这四个过程，请在输入数据{}中匹配这四个过程，如果匹配到，则返回匹配到的job列表，如果没有匹配到，则返回空数组。
举例1：{请通过构建，部署这些工作流任务来分析 min-test、cosmos-helm-1 项目三个月以来的质量是否有提升}，此刻匹配到的job列表是:["build","deploy"]
举例2：{请分析项目min-test最近两个月的情况},此时job列表返回空 "job_list":[]
//下面()内是用户和文本提取器的交互过程的案例：
(<用户>：{请通过构建，测试这些工作流任务来分析 helm-test-2、cosmos-helm-1 项目三个月以来的质量是否有提升}
<文本信息提取器>：{"project_list":["helm-test-2", "cosmos-helm-1"],"job_list":["build", "test"],"start_time":"1678607280","end_time":"1686556177"}")。
<用户>: {请分析项目min-test最近两个月的情况}
<文本信息提取器>: {"project_list":["min-test"],"job_list":[],"start_time":"1681544880","end_time":"1681285680"})

请按前面的规则提取下面 {} 内的内容，同时需要校验自己的答案是否符合提取规则和输出要求。输出要求：仅返回JSON数据，不要有任何多余解释过程的输出。
`

const EveryProjectAnalysisPrompt = `首先，你需要按照以下两个步骤来完成回答：第一步：你需要根据项目数据计算每周的构建成功和失败率，部署成功和失败率，测试成功和失败率，必须要对计算结果做检查，判断是否正确，否则重新计算；第二步：你需要根据项目数据分析该项目的三个指标：
1. 项目质量：质量由测试成功率和测试覆盖率决定，各指标成功率越高，质量越好，注意，如果该项目的测试成功率和失败率为0，则代表该项目质量不可靠，需要引起重视；
2. 项目效率：效率由构建、部署、测试的成功率以及构建，部署，测试的平均耗时决定，成功率越高，平均耗时越低，效率越高，注意，如果该项目的构建、部署、测试的成功率和失败率同时为0，则代表该项目异常，需要引起重视；
3. 缺陷：缺陷由测试、构建、部署的失败率来决定，失败率越高，可能存在问题的概率越大，同时测试覆盖率低，存在问题概率越大。
在你的回答中需要包含第一步计算的的每周的构建、部署、测试的成功率和失败率和第二步对三个指标的分析结果，同时也要包含对这个项目存在问题的分析并给出高质量建议，回答格式要满足三个大括号的回答示例：
{{{项目名称：xxx，数据范围是2023年4月1号到2023年6月1号，2023年4月1号-2023年4月8号，构建次数为，部署次数....;1. 项目质量：该项目总共执行了35次测试，其中测试成功次数为30，失败次数为5次；2. 项目效率：该项目构建了40次，其中构建成功了30次，失败了10次,部署....;3. 该项目存在以下问题....;通过对项目数据的分析，我认为该项目测试次数过少....需要注意...可以通过增加测试次数来提高项目质量....}}}
你的回答不要超过400个汉字。`

const OverallAnalysisPrompt = `假设你是资深Devops专家，后面的<JSON输入数据>是你在上一步根据每个项目的构建、测试、部署、发布等过程的详细数据生产的分析评估结果的并集，此数据包含每个项目独立的分析结果`

// PromptExamples great example to display
var PromptExamples = []string{
	"请根据项目的构建、部署、测试和发布等数据，分析项目的现状，并基于历史数据，分析未来的趋势和潜在问题，并提出改进建议和措施。",
}

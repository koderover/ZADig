package ai

const ProjectStatPrompt = `
你是文本信息提取器，需要严格根据下面 1 2 3这三条规则来提取输入 {} 内的内容。
下面开头带//符合的1，2，3 是文本提取规则：
//1. 开始和截止时间: 注意，开始时间和截止时间都是10位的秒级时间戳，需要转换为字符串，生成后对开始时间和截止时间做校验，无误才返回。
//举例1：文本中存在"最近三个月"，我们假定此刻秒级时间戳=1686556177，则截止时间的秒级时间戳为"1686556177"，开始时间为1686556177 - 三个月的时间，所以开始时间="1678607280"，注意，结果返回秒级时间戳并转为字符串；
//举例2：文本中不存在与时间相关的内容，则开始时间和截止时间字段返回为"0"。
//2. 项目列表：返回{}内输入中的项目名称列表。
//举例1：{请通过构建，部署这些工作流任务来分析 min-test、cosmos-helm-1 项目三个月以来的质量是否有提升}，此时匹配到的项目列表是：{"min-test","cosmos-helm-1"}。
//举例2：{分析一下最近几天项目的发展趋势},则项目列表返回空数组。
//举例3：{分析项目min-test，tt-zhati未来三个月的趋势},则匹配到的项目列表为["min-test","tt-zhati"]。
//3. job列表：job列表是指项目的构建(build)、测试(test)、部署(deploy)、发布(release)这四个过程，请在输入数据{}中匹配这四个过程，如果匹配到，则返回匹配到的job列表，如果没有匹配到，则返回空数组。
//举例1：{请通过构建，部署这些工作流任务来分析 min-test、cosmos-helm-1 项目三个月以来的质量是否有提升}，此刻匹配到的job列表是:["build","deploy"]
//举例2：{请分析项目min-test最近两个月的情况},此时job列表返回空 "job_list":[]
//下面()内是用户和文本提取器的交互过程的案例：
//(<用户>：{请通过构建，测试这些工作流任务来分析 helm-test-2、cosmos-helm-1 项目三个月以来的质量是否有提升}
//<文本信息提取器>：{"project_list":["helm-test-2", "cosmos-helm-1"],"job_list":["build", "test"],"start_time":"1678607280","end_time":"1686556177"}")。
//<用户>: {请分析项目min-test最近两个月的情况}
//<文本信息提取器>: {"project_list":["min-test"],"job_list":[],"start_time":"1681544880","end_time":"1681285680"})
要求：请按前面的规则提取下面 {} 内的内容，同时需要校验自己的答案是否符合提取规则和输出要求。输出要求：仅返回JSON数据，不要有任何多余解释过程的输出。
`

const EveryProjectAnalysisPrompt = `下面JSON数据是一个项目的构建、测试、部署、发布等工详细
数据，请你从多角度分析并评估此项目的现状（包括质量，效率），提供一些改进建议和重点需要关注的问题和优化方向，并分析此项目的未来发展趋势。`

const OverallAnalysisPrompt = `假设你是Devops专家，后面的<JSON输入数据>是你在上一步根据每个项目的构建、测试、部署、发布等过程的详细数据生产的分析评估结果的并集，此数据包含每个项目独立的分析结果`

// PromptExamples great example to display
var PromptExamples = []string{
	"请根据项目的构建、部署、测试和发布等数据，分析项目的现状，并基于历史数据，分析未来的趋势和潜在问题，并提出改进建议和措施。",
}

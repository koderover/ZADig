// Code generated by swaggo/swag. DO NOT EDIT.

package doc

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "contact@koderover.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/collaboration/collaborations/sync": {
            "post": {
                "description": "Sync Collaboration Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collaboration"
                ],
                "summary": "Sync Collaboration Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.SyncCollaborationInstanceArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/environment/environments": {
            "put": {
                "description": "Update Multi products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update Multi products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is force",
                        "name": "force",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "updateMultiK8sEnv body",
                        "name": "k8s_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.UpdateEnv"
                            }
                        }
                    },
                    {
                        "description": "updateMultiHelmEnv body",
                        "name": "helm_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateMultiHelmProductArg"
                        }
                    },
                    {
                        "description": "updateMultiCvmEnv body",
                        "name": "pm_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.UpdateEnv"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create Product(environment)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Create Product(environment)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env type",
                        "name": "envType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "scene",
                        "name": "scene",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "is auto",
                        "name": "auto",
                        "in": "query"
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.CreateSingleProductArg"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/environment/environments/{name}/globalVariableCandidates": {
            "get": {
                "description": "Get global variable candidates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get global variable candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceVariableKV"
                            }
                        }
                    }
                }
            }
        },
        "/environment/environments/{name}/k8s/globalVariables": {
            "put": {
                "description": "Update global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateK8sProductGlobalVariablesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/environment/environments/{name}/services": {
            "get": {
                "description": "List services in env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environments"
                ],
                "summary": "List services in env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvServices"
                        }
                    }
                }
            },
            "put": {
                "description": "Delete services from envrionment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Delete services",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.DeleteProductServicesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/environment/environments/{name}/services/{serviceName}": {
            "put": {
                "description": "Update service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Update service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.SvcRevision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/environment/environments/{name}/services/{serviceName}/preview": {
            "post": {
                "description": "Preview service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Preview service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.PreviewServiceArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.SvcDiffResult"
                        }
                    }
                }
            }
        },
        "/environment/init_info/{name}": {
            "get": {
                "description": "Get init product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get init product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project template name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env type",
                        "name": "envType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "is base env",
                        "name": "isBaseEnv",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "base env",
                        "name": "baseEnv",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.getInitProductRespone"
                        }
                    }
                }
            }
        },
        "/environment/kube/k8s/resources": {
            "post": {
                "description": "Get Resource Deploy Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get Resource Deploy Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.K8sDeployStatusCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.ServiceDeployStatus"
                            }
                        }
                    }
                }
            }
        },
        "/environment/production/environments/{name}/servicesForUpdate": {
            "get": {
                "description": "List services in production env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environments"
                ],
                "summary": "List services in production env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.EnvServices"
                        }
                    }
                }
            }
        },
        "/environment/rendersets/globalVariables": {
            "get": {
                "description": "Get global variable from environment, current only used for k8s project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get global variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "envName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.getGlobalVariablesRespone"
                        }
                    }
                }
            }
        },
        "/environment/rendersets/variables": {
            "get": {
                "description": "Get service variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get service variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "envName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.K8sSvcRenderArg"
                            }
                        }
                    }
                }
            }
        },
        "/environments/{name}/services/{serviceName}/variables": {
            "get": {
                "description": "Get production service variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "environment"
                ],
                "summary": "Get production service variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "env name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "serviceName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.K8sSvcRenderArg"
                            }
                        }
                    }
                }
            }
        },
        "/placeholder/deploy_job_spec": {
            "post": {
                "description": "[DONT USE] ZadigDeployJobSpec",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "placeholder"
                ],
                "summary": "[DONT USE]  ZadigDeployJobSpec",
                "parameters": [
                    {
                        "description": "body",
                        "name": "deploy_job_spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ZadigDeployJobSpec"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/project/products/{name}/globalVariableCandidates": {
            "get": {
                "description": "Get global variable candidates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get global variable candidates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.GetGlobalVariableCandidatesRespone"
                            }
                        }
                    }
                }
            }
        },
        "/project/products/{name}/globalVariables": {
            "get": {
                "description": "Get global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Get global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.ServiceVariableKV"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update global variables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "Update global variables",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateGlobalVariablesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/service/services": {
            "post": {
                "description": "Create service template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Create service template",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "is force to create service template",
                        "name": "force",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.createServiceTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ServiceOption"
                        }
                    }
                }
            }
        },
        "/service/services/variable/convert": {
            "post": {
                "description": "convert varaible kv and yaml",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "convert varaible kv and yaml",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.ConvertVaraibleKVAndYamlArgs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.ConvertVaraibleKVAndYamlArgs"
                        }
                    }
                }
            }
        },
        "/service/services/{name}/environments/deployable": {
            "get": {
                "description": "Get Deployable Envs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Get Deployable Envs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.DeployableEnvResp"
                        }
                    }
                }
            }
        },
        "/service/services/{name}/variable": {
            "put": {
                "description": "Update service varaible",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Update service varaible",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "project name",
                        "name": "projectName",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updateServiceVariableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/service/template/load": {
            "post": {
                "description": "Load service from yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Load service from yaml template",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.LoadServiceFromYamlTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/service/template/reload": {
            "post": {
                "description": "Reload service from yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Reload service from yaml template",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.LoadServiceFromYamlTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/template/yaml": {
            "post": {
                "description": "Create yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Create yaml template",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/template.YamlTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/template/yaml/validateVariable": {
            "post": {
                "description": "Validate template varaibles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Validate template varaibles",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.getYamlTemplateVariablesReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/template/yaml/{id}": {
            "get": {
                "description": "Get yaml template detail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Get yaml template detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/template.YamlDetail"
                        }
                    }
                }
            },
            "put": {
                "description": "Update yaml template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Update yaml template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/template.YamlTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/template/yaml/{id}/variable": {
            "put": {
                "description": "Update yaml template variable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "template"
                ],
                "summary": "Update yaml template variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "template id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/template.YamlTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/workflow/v4/filterEnv": {
            "post": {
                "description": "Get filtered env services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflow"
                ],
                "summary": "Get filtered env services",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.filterDeployServiceVarsQuery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DeployService"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.CollaborationType": {
            "type": "string",
            "enum": [
                "share",
                "new"
            ],
            "x-enum-varnames": [
                "CollaborationShare",
                "CollaborationNew"
            ]
        },
        "config.CommonEnvCfgType": {
            "type": "string",
            "enum": [
                "Ingress",
                "ConfigMap",
                "Secret",
                "PVC"
            ],
            "x-enum-varnames": [
                "CommonEnvCfgTypeIngress",
                "CommonEnvCfgTypeConfigMap",
                "CommonEnvCfgTypeSecret",
                "CommonEnvCfgTypePvc"
            ]
        },
        "config.DeployContent": {
            "type": "string",
            "enum": [
                "image",
                "vars",
                "config"
            ],
            "x-enum-varnames": [
                "DeployImage",
                "DeployVars",
                "DeployConfig"
            ]
        },
        "config.DeploySourceType": {
            "type": "string",
            "enum": [
                "runtime",
                "fromjob"
            ],
            "x-enum-varnames": [
                "SourceRuntime",
                "SourceFromJob"
            ]
        },
        "github_com_koderover_zadig_pkg_microservice_aslan_core_common_service.EnvService": {
            "type": "object",
            "properties": {
                "deployed": {
                    "type": "boolean"
                },
                "latest_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "latest_variable_yaml": {
                    "type": "string"
                },
                "service_modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.Variable": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteProductServicesRequest": {
            "type": "object",
            "properties": {
                "service_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.createServiceTemplateRequest": {
            "type": "object",
            "required": [
                "product_name",
                "service_name",
                "source",
                "type",
                "variable_yaml",
                "visibility"
            ],
            "properties": {
                "product_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "source": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "handler.filterDeployServiceVarsQuery": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "job_name": {
                    "type": "string"
                },
                "service_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workflow_name": {
                    "type": "string"
                }
            }
        },
        "handler.getGlobalVariablesRespone": {
            "type": "object",
            "properties": {
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "revision": {
                    "type": "integer"
                }
            }
        },
        "handler.getInitProductRespone": {
            "type": "object",
            "properties": {
                "chart_infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/template.ServiceRender"
                    }
                },
                "create_time": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "render": {
                    "$ref": "#/definitions/models.RenderInfo"
                },
                "revision": {
                    "type": "integer"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.ProductService"
                        }
                    }
                },
                "source": {
                    "type": "string"
                },
                "update_by": {
                    "type": "string"
                }
            }
        },
        "handler.getYamlTemplateVariablesReq": {
            "type": "object",
            "required": [
                "content",
                "variable_yaml"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "handler.updateGlobalVariablesRequest": {
            "type": "object",
            "properties": {
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                }
            }
        },
        "handler.updateK8sProductGlobalVariablesRequest": {
            "type": "object",
            "properties": {
                "current_revision": {
                    "type": "integer"
                },
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                }
            }
        },
        "handler.updateServiceVariableRequest": {
            "type": "object",
            "required": [
                "service_variable_kvs",
                "variable_yaml"
            ],
            "properties": {
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "models.Commit": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                }
            }
        },
        "models.Container": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "imagePath": {
                    "$ref": "#/definitions/models.ImagePathSpec"
                },
                "image_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateUpdateCommonEnvCfgArgs": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "common_env_cfg_type": {
                    "$ref": "#/definitions/config.CommonEnvCfgType"
                },
                "env_name": {
                    "type": "string"
                },
                "git_repo_config": {
                    "$ref": "#/definitions/template.GitRepoConfig"
                },
                "name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "restart_associated_svc": {
                    "type": "boolean"
                },
                "service_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "yaml_data": {
                    "type": "string"
                }
            }
        },
        "models.DeplopyVariableConfig": {
            "type": "object",
            "properties": {
                "use_global_variable": {
                    "type": "boolean"
                },
                "variable_key": {
                    "type": "string"
                }
            }
        },
        "models.DeployService": {
            "type": "object",
            "properties": {
                "key_vals": {
                    "description": "KeyVals Deprecated since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceKeyVal"
                    }
                },
                "latest_key_vals": {
                    "description": "LatestKeyVals Deprecated since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceKeyVal"
                    }
                },
                "latest_variable_kvs": {
                    "description": "LatestVariableKVs added since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "update_config": {
                    "type": "boolean"
                },
                "variable_configs": {
                    "description": "VariableConfigs added since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeplopyVariableConfig"
                    }
                },
                "variable_kvs": {
                    "description": "VariableKVs added since 1.18",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                }
            }
        },
        "models.EnvConfig": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "host_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.EnvStatus": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "host_id": {
                    "type": "string"
                },
                "pm_info": {
                    "$ref": "#/definitions/models.PmInfo"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.GUIConfig": {
            "type": "object",
            "properties": {
                "deployment": {},
                "ingress": {},
                "service": {}
            }
        },
        "models.HelmChart": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "values_yaml": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.ImagePathSpec": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "models.ParameterSettingType": {
            "type": "string",
            "enum": [
                "string",
                "choice",
                "external"
            ],
            "x-enum-varnames": [
                "StringType",
                "ChoiceType",
                "ExternalType"
            ]
        },
        "models.PmHealthCheck": {
            "type": "object",
            "properties": {
                "current_healthy_num": {
                    "type": "integer"
                },
                "current_unhealthy_num": {
                    "type": "integer"
                },
                "healthy_threshold": {
                    "type": "integer"
                },
                "interval": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "time_out": {
                    "type": "integer"
                },
                "unhealthy_threshold": {
                    "type": "integer"
                }
            }
        },
        "models.PmInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "is_prod": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "provider": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/setting.PMHostStatus"
                }
            }
        },
        "models.ProductService": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "error": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "models.ProductShareEnv": {
            "type": "object",
            "properties": {
                "base_env": {
                    "type": "string"
                },
                "enable": {
                    "type": "boolean"
                },
                "is_base": {
                    "type": "boolean"
                }
            }
        },
        "models.RenderInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product_tmpl": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                }
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "branch_name": {
                    "type": "string"
                },
                "build_name": {
                    "type": "string"
                },
                "codehost_id": {
                    "type": "integer"
                },
                "commit": {
                    "$ref": "#/definitions/models.Commit"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "create_by": {
                    "type": "string"
                },
                "create_from": {},
                "create_time": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "env_name": {
                    "type": "string"
                },
                "env_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvStatus"
                    }
                },
                "gerrit_branch_name": {
                    "type": "string"
                },
                "gerrit_codeHost_id": {
                    "type": "integer"
                },
                "gerrit_path": {
                    "type": "string"
                },
                "gerrit_remote_name": {
                    "type": "string"
                },
                "gerrit_repo_name": {
                    "type": "string"
                },
                "gitee_path": {
                    "type": "string"
                },
                "gui_config": {
                    "$ref": "#/definitions/models.GUIConfig"
                },
                "hash256": {
                    "type": "string"
                },
                "health_checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PmHealthCheck"
                    }
                },
                "helm_chart": {
                    "$ref": "#/definitions/models.HelmChart"
                },
                "is_dir": {
                    "type": "boolean"
                },
                "load_path": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "release_naming": {
                    "type": "string"
                },
                "repo_name": {
                    "type": "string"
                },
                "repo_namespace": {
                    "type": "string"
                },
                "repo_owner": {
                    "type": "string"
                },
                "repo_uuid": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "description": "New since 1.18.0, stores the variable kvs of k8s services",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "service_vars": {
                    "description": "DEPRECATED, New since 1.16.0, stores keys in variables which can be set in env",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                },
                "src_path": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                },
                "template_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable_yaml": {
                    "description": "New since 1.16.0, stores the variable yaml of k8s services",
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "workload_type": {
                    "description": "WorkloadType is set in host projects",
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "models.ServiceAndImage": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                },
                "service_module": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "models.ServiceKeyVal": {
            "type": "object",
            "properties": {
                "choice_option": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "is_credential": {
                    "type": "boolean"
                },
                "key": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ParameterSettingType"
                },
                "value": {}
            }
        },
        "models.ZadigDeployJobSpec": {
            "type": "object",
            "properties": {
                "deploy_contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.DeployContent"
                    }
                },
                "deploy_type": {
                    "type": "string"
                },
                "env": {
                    "type": "string"
                },
                "job_name": {
                    "description": "当 source 为 fromjob 时需要，指定部署镜像来源是上游哪一个构建任务",
                    "type": "string"
                },
                "origin_job_name": {
                    "description": "save the origin quoted job name",
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "service_and_images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceAndImage"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.DeployService"
                    }
                },
                "skip_check_run_status": {
                    "type": "boolean"
                },
                "source": {
                    "description": "fromjob/runtime, runtime 表示运行时输入，fromjob 表示从上游构建任务中获取",
                    "allOf": [
                        {
                            "$ref": "#/definitions/config.DeploySourceType"
                        }
                    ]
                }
            }
        },
        "service.ConvertVaraibleKVAndYamlActionType": {
            "type": "string",
            "enum": [
                "toKV",
                "toYaml"
            ],
            "x-enum-varnames": [
                "ConvertVaraibleKVAndYamlActionTypeToKV",
                "ConvertVaraibleKVAndYamlActionTypeToYaml"
            ]
        },
        "service.ConvertVaraibleKVAndYamlArgs": {
            "type": "object",
            "required": [
                "action",
                "kvs",
                "yaml"
            ],
            "properties": {
                "action": {
                    "$ref": "#/definitions/service.ConvertVaraibleKVAndYamlActionType"
                },
                "kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.CreateSingleProductArg": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "base_env_name": {
                    "type": "string"
                },
                "base_name": {
                    "description": "for collaboration mode",
                    "type": "string"
                },
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ProductHelmServiceCreationInfo"
                    }
                },
                "cluster_id": {
                    "type": "string"
                },
                "defaultValues": {
                    "description": "TODO fix me",
                    "type": "string"
                },
                "default_values": {
                    "type": "string"
                },
                "env_configs": {
                    "description": "New Since v1.13.0",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CreateUpdateCommonEnvCfgArgs"
                    }
                },
                "env_name": {
                    "type": "string"
                },
                "global_variables": {
                    "description": "for k8s products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "is_existed": {
                    "type": "boolean"
                },
                "namespace": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "production": {
                    "type": "boolean"
                },
                "registry_id": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/service.ProductK8sServiceCreationInfo"
                        }
                    }
                },
                "share_env": {
                    "description": "New Since v1.12.0",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.ProductShareEnv"
                        }
                    ]
                },
                "valuesData": {
                    "description": "for helm products",
                    "allOf": [
                        {
                            "$ref": "#/definitions/service.ValuesDataArgs"
                        }
                    ]
                }
            }
        },
        "service.DeployStatus": {
            "type": "string",
            "enum": [
                "deployed",
                "undeployed"
            ],
            "x-enum-varnames": [
                "StatusDeployed",
                "StatusUnDeployed"
            ]
        },
        "service.DeployableEnv": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "global_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "namespace": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceWithVariable"
                    }
                }
            }
        },
        "service.DeployableEnvResp": {
            "type": "object",
            "properties": {
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.DeployableEnv"
                    }
                }
            }
        },
        "service.EnvServices": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_common_service.EnvService"
                    }
                }
            }
        },
        "service.GetGlobalVariableCandidatesRespone": {
            "type": "object",
            "properties": {
                "key_name": {
                    "type": "string"
                },
                "related_service": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.HelmSvcRenderArg": {
            "type": "object",
            "properties": {
                "chartVersion": {
                    "type": "string"
                },
                "deploy_strategy": {
                    "description": "New since 1.16.0, used to determine if the service will be installed",
                    "type": "string"
                },
                "envName": {
                    "type": "string"
                },
                "overrideValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.KVPair"
                    }
                },
                "overrideYaml": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml_data": {
                    "$ref": "#/definitions/template.CustomYaml"
                }
            }
        },
        "service.K8sDeployStatusCheckRequest": {
            "type": "object",
            "properties": {
                "cluster_id": {
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.K8sSvcRenderArg"
                    }
                }
            }
        },
        "service.K8sSvcRenderArg": {
            "type": "object",
            "properties": {
                "deploy_strategy": {
                    "description": "New since 1.16.0, used to determine if the service will be installed",
                    "type": "string"
                },
                "env_name": {
                    "type": "string"
                },
                "latest_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "latest_variable_yaml": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.KVPair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "service.LoadServiceFromYamlTemplateReq": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "project_name": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "template_id": {
                    "type": "string"
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.PreviewServiceArgs": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "service_modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "service_name": {
                    "type": "string"
                },
                "update_service_revision": {
                    "type": "boolean"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                }
            }
        },
        "service.Product": {
            "type": "object",
            "properties": {
                "base_name": {
                    "type": "string"
                },
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.HelmSvcRenderArg"
                    }
                },
                "collaboration_mode": {
                    "type": "string"
                },
                "collaboration_type": {
                    "$ref": "#/definitions/config.CollaborationType"
                },
                "default_values": {
                    "type": "string"
                },
                "deploy_type": {
                    "type": "string"
                },
                "global_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.GlobalVariableKV"
                    }
                },
                "name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.K8sSvcRenderArg"
                    }
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                },
                "yaml_data": {
                    "$ref": "#/definitions/template.CustomYaml"
                }
            }
        },
        "service.ProductHelmServiceCreationInfo": {
            "type": "object",
            "properties": {
                "chartVersion": {
                    "type": "string"
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "envName": {
                    "type": "string"
                },
                "overrideValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.KVPair"
                    }
                },
                "overrideYaml": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "valuesData": {
                    "$ref": "#/definitions/service.ValuesDataArgs"
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml_data": {
                    "$ref": "#/definitions/template.CustomYaml"
                }
            }
        },
        "service.ProductK8sServiceCreationInfo": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "env_configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvConfig"
                    }
                },
                "error": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.RepoConfig": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "codehostID": {
                    "type": "integer"
                },
                "namespace": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "valuesPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service.ResourceDeployStatus": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/service.DeployStatus"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service.ServiceDeployStatus": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ResourceDeployStatus"
                    }
                },
                "service_name": {
                    "type": "string"
                }
            }
        },
        "service.ServiceModule": {
            "type": "object",
            "properties": {
                "build_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "type": "string"
                },
                "imagePath": {
                    "$ref": "#/definitions/models.ImagePathSpec"
                },
                "image_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.ServiceOption": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/definitions/models.Service"
                },
                "service_module": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ServiceModule"
                    }
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "system_variable": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_koderover_zadig_pkg_microservice_aslan_core_service_service.Variable"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.SvcDiffResult": {
            "type": "object",
            "properties": {
                "current": {
                    "$ref": "#/definitions/service.TmplYaml"
                },
                "latest": {
                    "$ref": "#/definitions/service.TmplYaml"
                }
            }
        },
        "service.SvcRevision": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Container"
                    }
                },
                "current_revision": {
                    "type": "integer"
                },
                "deleted": {
                    "type": "boolean"
                },
                "deploy_strategy": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "new": {
                    "type": "boolean"
                },
                "next_revision": {
                    "type": "integer"
                },
                "service_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatable": {
                    "type": "boolean"
                },
                "update_service_tmpl": {
                    "type": "boolean"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "service.SyncCollaborationInstanceArgs": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Product"
                    }
                }
            }
        },
        "service.TmplYaml": {
            "type": "object",
            "properties": {
                "revision": {
                    "type": "integer"
                },
                "update_by": {
                    "type": "string"
                },
                "yaml": {
                    "type": "string"
                }
            }
        },
        "service.UpdateEnv": {
            "type": "object",
            "properties": {
                "env_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.UpdateServiceArg"
                    }
                }
            }
        },
        "service.UpdateMultiHelmProductArg": {
            "type": "object",
            "properties": {
                "chartValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.HelmSvcRenderArg"
                    }
                },
                "deletedServices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "envNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productName": {
                    "type": "string"
                },
                "replacePolicy": {
                    "description": "TODO logic not implemented",
                    "type": "string"
                }
            }
        },
        "service.UpdateServiceArg": {
            "type": "object",
            "properties": {
                "deploy_strategy": {
                    "type": "string"
                },
                "service_name": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                }
            }
        },
        "service.ValuesDataArgs": {
            "type": "object",
            "properties": {
                "autoSync": {
                    "type": "boolean"
                },
                "gitRepoConfig": {
                    "$ref": "#/definitions/service.RepoConfig"
                },
                "source_id": {
                    "type": "string"
                },
                "yamlSource": {
                    "type": "string"
                }
            }
        },
        "setting.PMHostStatus": {
            "type": "string",
            "enum": [
                "normal",
                "abnormal"
            ],
            "x-enum-varnames": [
                "PMHostStatusNormal",
                "PMHostStatusAbnormal"
            ]
        },
        "template.CustomYaml": {
            "type": "object",
            "properties": {
                "auto_sync": {
                    "type": "boolean"
                },
                "render_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "source": {
                    "type": "string"
                },
                "source_detail": {},
                "source_id": {
                    "type": "string"
                },
                "yaml_content": {
                    "type": "string"
                }
            }
        },
        "template.GitRepoConfig": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "codehost_id": {
                    "type": "integer"
                },
                "namespace": {
                    "description": "records the actual namespace of repo, used to generate correct project name",
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "values_paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "template.ServiceRender": {
            "type": "object",
            "properties": {
                "chart_version": {
                    "description": "---- for helm services begin ----",
                    "type": "string"
                },
                "override_values": {
                    "description": "used for helm services, json-encoded string of kv value",
                    "type": "string"
                },
                "override_yaml": {
                    "description": "OverrideYaml will be used in both helm and k8s projects\nIn k8s this is variable_yaml",
                    "allOf": [
                        {
                            "$ref": "#/definitions/template.CustomYaml"
                        }
                    ]
                },
                "service_name": {
                    "type": "string"
                },
                "values_yaml": {
                    "type": "string"
                }
            }
        },
        "template.YamlDetail": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "template.YamlTemplate": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.ServiceVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        },
        "types.GlobalVariableKV": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "related_services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.ServiceVariableKVType"
                },
                "value": {}
            }
        },
        "types.RenderVariableKV": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.ServiceVariableKVType"
                },
                "use_global_variable": {
                    "type": "boolean"
                },
                "value": {}
            }
        },
        "types.ServiceVariableKV": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/types.ServiceVariableKVType"
                },
                "value": {}
            }
        },
        "types.ServiceVariableKVType": {
            "type": "string",
            "enum": [
                "bool",
                "string",
                "enum",
                "yaml"
            ],
            "x-enum-varnames": [
                "ServiceVariableKVTypeBoolean",
                "ServiceVariableKVTypeString",
                "ServiceVariableKVTypeEnum",
                "ServiceVariableKVTypeYaml"
            ]
        },
        "types.ServiceWithVariable": {
            "type": "object",
            "properties": {
                "service_name": {
                    "type": "string"
                },
                "variable_kvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.RenderVariableKV"
                    }
                },
                "variable_yaml": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/aslan",
	Schemes:          []string{},
	Title:            "Zadig aslan service REST APIs",
	Description:      "The API doc is targeting for Zadig developers rather than Zadig users.\nThe majority of these APIs are not designed for public use, there is no guarantee on version compatibility.\nPlease reach out to contact@koderover.com before you decide to depend on these APIs directly.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
